<?php

namespace DoctrineProxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ActivityFeedPostYoutubeVideo extends \Entity\ActivityFeedPostYoutubeVideo implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'video_id', 'activity_feed_post_id', 'activity_feed_post_comment_id', 'title', 'description');
        }

        return array('__isInitialized__', 'id', 'video_id', 'activity_feed_post_id', 'activity_feed_post_comment_id', 'title', 'description');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ActivityFeedPostYoutubeVideo $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivityFeedPostId($activity_feed_post_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivityFeedPostId', array($activity_feed_post_id));

        return parent::setActivityFeedPostId($activity_feed_post_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivityFeedPostId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivityFeedPostId', array());

        return parent::getActivityFeedPostId();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivityFeedPostCommentId($activity_feed_post_comment_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivityFeedPostCommentId', array($activity_feed_post_comment_id));

        return parent::setActivityFeedPostCommentId($activity_feed_post_comment_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivityFeedPostCommentId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivityFeedPostCommentId', array());

        return parent::getActivityFeedPostCommentId();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivityFeedPost(\Entity\ActivityFeedPost $activity_feed_post)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivityFeedPost', array($activity_feed_post));

        return parent::setActivityFeedPost($activity_feed_post);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivityFeedPost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivityFeedPost', array());

        return parent::getActivityFeedPost();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivityFeedPostComment(\Entity\ActivityFeedPostComment $activity_feed_post_comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivityFeedPostComment', array($activity_feed_post_comment));

        return parent::setActivityFeedPostComment($activity_feed_post_comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivityFeedPostComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivityFeedPostComment', array());

        return parent::getActivityFeedPostComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setVideoId($video_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVideoId', array($video_id));

        return parent::setVideoId($video_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getVideoId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVideoId', array());

        return parent::getVideoId();
    }

    /**
     * {@inheritDoc}
     */
    public function getThumbnailUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThumbnailUrl', array());

        return parent::getThumbnailUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleAndDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleAndDescription', array());

        return parent::setTitleAndDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription($options = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array($options));

        return parent::getDescription($options);
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function get_class_without_namespace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get_class_without_namespace', array());

        return parent::get_class_without_namespace();
    }

}
