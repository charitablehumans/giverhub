<?php

namespace DoctrineProxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ChangeOrgPetitionReason extends \Entity\ChangeOrgPetitionReason implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'petition_id', 'content', 'like_count', 'author_name', 'author_url', 'created_on');
        }

        return array('__isInitialized__', 'id', 'petition_id', 'content', 'like_count', 'author_name', 'author_url', 'created_on');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ChangeOrgPetitionReason $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setCreatedOn($created_on)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', array($created_on));

        return parent::setCreatedOn($created_on);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedOnDt(\DateTime $created_on)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOnDt', array($created_on));

        return parent::setCreatedOnDt($created_on);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', array());

        return parent::getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOnDt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOnDt', array());

        return parent::getCreatedOnDt();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPetitionId($petition_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPetitionId', array($petition_id));

        return parent::setPetitionId($petition_id);
    }

    /**
     * {@inheritDoc}
     */
    public function setPetition(\Entity\ChangeOrgPetition $petition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPetition', array($petition));

        return parent::setPetition($petition);
    }

    /**
     * {@inheritDoc}
     */
    public function getPetitionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPetitionId', array());

        return parent::getPetitionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthorName($author_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthorName', array($author_name));

        return parent::setAuthorName($author_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthorName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthorName', array());

        return parent::getAuthorName();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthorUrl($author_url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthorUrl', array($author_url));

        return parent::setAuthorUrl($author_url);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthorUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthorUrl', array());

        return parent::getAuthorUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', array($content));

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array());

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setLikeCount($like_count)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLikeCount', array($like_count));

        return parent::setLikeCount($like_count);
    }

    /**
     * {@inheritDoc}
     */
    public function getLikeCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLikeCount', array());

        return parent::getLikeCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getPetition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPetition', array());

        return parent::getPetition();
    }

    /**
     * {@inheritDoc}
     */
    public function get_class_without_namespace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get_class_without_namespace', array());

        return parent::get_class_without_namespace();
    }

}
