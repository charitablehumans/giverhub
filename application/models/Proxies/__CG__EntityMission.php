<?php

namespace DoctrineProxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Mission extends \Entity\Mission implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'mission', 'source', 'created_time', 'updated_time', 'user_id', 'charity_id', '_votes', '_vote_sum');
        }

        return array('__isInitialized__', 'id', 'mission', 'source', 'created_time', 'updated_time', 'user_id', 'charity_id', '_votes', '_vote_sum');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Mission $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function onPrePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPrePersist', array());

        return parent::onPrePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function onPreUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPreUpdate', array());

        return parent::onPreUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function onPreRemove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPreRemove', array());

        return parent::onPreRemove();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharityId($charity_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCharityId', array($charity_id));

        return parent::setCharityId($charity_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharityId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCharityId', array());

        return parent::getCharityId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharity(\Entity\Charity $charity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCharity', array($charity));

        return parent::setCharity($charity);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCharity', array());

        return parent::getCharity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedTime($created_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedTime', array($created_time));

        return parent::setCreatedTime($created_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedTime', array());

        return parent::getCreatedTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedTimeDt(\DateTime $created_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedTimeDt', array($created_time));

        return parent::setCreatedTimeDt($created_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedTimeDt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedTimeDt', array());

        return parent::getCreatedTimeDt();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMission($mission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMission', array($mission));

        return parent::setMission($mission);
    }

    /**
     * {@inheritDoc}
     */
    public function getMission()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMission', array());

        return parent::getMission();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource($source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', array($source));

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', array());

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedTime($updated_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedTime', array($updated_time));

        return parent::setUpdatedTime($updated_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedTime', array());

        return parent::getUpdatedTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedTimeDt(\DateTime $updated_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedTimeDt', array($updated_time));

        return parent::setUpdatedTimeDt($updated_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedTimeDt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedTimeDt', array());

        return parent::getUpdatedTimeDt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId($user_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', array($user_id));

        return parent::setUserId($user_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', array());

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getVotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVotes', array());

        return parent::getVotes();
    }

    /**
     * {@inheritDoc}
     */
    public function getVoteSum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVoteSum', array());

        return parent::getVoteSum();
    }

    /**
     * {@inheritDoc}
     */
    public function getMyVote(\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMyVote', array($user));

        return parent::getMyVote($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceFormatted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceFormatted', array());

        return parent::getSourceFormatted();
    }

    /**
     * {@inheritDoc}
     */
    public function get_class_without_namespace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get_class_without_namespace', array());

        return parent::get_class_without_namespace();
    }

}
