<?php

namespace DoctrineProxies\__CG__\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BetFriend extends \Entity\BetFriend implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'statuses', 'claims', 'id', 'claim', 'bet', 'user', 'facebookFriend', 'donation', 'otherDonation', 'charity', 'status', 'email');
        }

        return array('__isInitialized__', 'statuses', 'claims', 'id', 'claim', 'bet', 'user', 'facebookFriend', 'donation', 'otherDonation', 'charity', 'status', 'email');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BetFriend $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', array());

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getBet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBet', array());

        return parent::getBet();
    }

    /**
     * {@inheritDoc}
     */
    public function setBet(\Entity\Bet $bet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBet', array($bet));

        return parent::setBet($bet);
    }

    /**
     * {@inheritDoc}
     */
    public function getCharity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCharity', array());

        return parent::getCharity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCharity(\Entity\Charity $charity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCharity', array($charity));

        return parent::setCharity($charity);
    }

    /**
     * {@inheritDoc}
     */
    public function getDonation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDonation', array());

        return parent::getDonation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDonation(\Entity\Donation $donation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDonation', array($donation));

        return parent::setDonation($donation);
    }

    /**
     * {@inheritDoc}
     */
    public function getOtherDonation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtherDonation', array());

        return parent::getOtherDonation();
    }

    /**
     * {@inheritDoc}
     */
    public function setOtherDonation(\Entity\Donation $donation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOtherDonation', array($donation));

        return parent::setOtherDonation($donation);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebookFriend()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebookFriend', array());

        return parent::getFacebookFriend();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebookFriend(\Entity\FacebookFriend $facebookFriend = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebookFriend', array($facebookFriend));

        return parent::setFacebookFriend($facebookFriend);
    }

    /**
     * {@inheritDoc}
     */
    public function setFriend(\Entity\BaseEntity $friend)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFriend', array($friend));

        return parent::setFriend($friend);
    }

    /**
     * {@inheritDoc}
     */
    public function getFriend()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFriend', array());

        return parent::getFriend();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setClaim($claim)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClaim', array($claim));

        return parent::setClaim($claim);
    }

    /**
     * {@inheritDoc}
     */
    public function getClaim()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClaim', array());

        return parent::getClaim();
    }

    /**
     * {@inheritDoc}
     */
    public function getNotMyClaim(\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotMyClaim', array($user));

        return parent::getNotMyClaim($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getMyDonation(\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMyDonation', array($user));

        return parent::getMyDonation($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotMyDonation(\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotMyDonation', array($user));

        return parent::getNotMyDonation($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function get_class_without_namespace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get_class_without_namespace', array());

        return parent::get_class_without_namespace();
    }

}
